% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Proxytools_tools.R
\name{paleodata_scaling}
\alias{paleodata_scaling}
\title{Function to compute scaling of the spectrum following the multi-taper methodology applied in Laepple and Huybers 2014, Rehfeld et al. 2018}
\usage{
paleodata_scaling(
  xin,
  freq.start = NULL,
  freq.end = NULL,
  target = "raw",
  interpolation = TRUE,
  method = "lh14",
  xout = NULL,
  transformation = FALSE,
  transformation_type = "normalize",
  detrend = TRUE,
  df_log = 0.05,
  bLog = FALSE
)
}
\arguments{
\item{xin}{Proxytibble with proxy data in `zoo::zoo` format, or irregular time series object (`zoo::zoo`), xin can be multivariate}

\item{freq.start}{Vector containing the start frequencies of the fitting interval(s)}

\item{freq.end}{Vector containing the start frequencies of the fitting interval(s)}

\item{target}{either "raw" or "logsmooth", default "raw"}

\item{interpolation}{Logical: should interpolation be applied?}

\item{method}{Parameters for interpolation (see paleodata_interpolation)}

\item{xout}{Parameters for interpolation (see paleodata_interpolation). If NULL the interpolation is set to the mean temporal resolution of each proxy time series.}

\item{transformation}{Logical: should transformation be applied?}

\item{transformation_type}{Parameters for transformation (see paleodata_transformation)}

\item{detrend}{Logical: should time series be linearly detrend before computing the spectrum}

\item{df_log}{Width of the log-smoother in log units}

\item{bLog}{TRUE: average in the log space of the power, FALSE: arithmetic average}
}
\value{
List with scaling coefficient, standard deviation and spectra (object description in SpecMTM and LogSmooth functions of PaleoSpec package)
}
\description{
Function to compute scaling of the spectrum following the multi-taper methodology applied in Laepple and Huybers 2014, Rehfeld et al. 2018
}
\examples{
# Load ice core example data
library(PTBoxProxydata)
mng <- ProxyDataManager()
icecoredata <- load_set(mng,'icecore_testset',zoo_format = 'zoo')
# compute scaling
testout <- icecoredata \%>\% paleodata_scaling(., target="raw")
print(testout)

}
\seealso{
\link{paleodata_spectrum} (from `PTBoxProxytools`) for computation of spectra

\link{SlopeFit} (from `PaleoSpec`) for computation of spectral slope
}
