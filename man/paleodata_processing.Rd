% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Proxytools_tools.R
\name{paleodata_processing}
\alias{paleodata_processing}
\title{Wrapper function for processing of datasets using various processing methods}
\usage{
paleodata_processing(
  xin,
  filtering = FALSE,
  filter_type = NULL,
  filter_scales = NULL,
  detr_scale = NULL,
  smooth_scale = NULL,
  interpolation = FALSE,
  method = NULL,
  xout = NULL,
  windowing = FALSE,
  start_date = NULL,
  end_date = NULL,
  transformation = FALSE,
  transformation_type = NULL,
  signal_extraction = FALSE,
  signal_type = NULL,
  signal_components = NA
)
}
\arguments{
\item{xin}{Proxytibble with proxy data in `zoo::zoo` format, or irregular time series object (`zoo::zoo`), xin can be multivariate}

\item{filtering}{Logical: should filtering be applied}

\item{filter_type}{Parameters for filtering (see paleodata_filtering)}

\item{filter_scales}{Parameters for filtering (see paleodata_filtering)}

\item{detr_scale}{Parameters for filtering (see paleodata_filtering)}

\item{smooth_scale}{Parameters for filtering (see paleodata_filtering)}

\item{interpolation}{Logical: should interpolation be applied?}

\item{method}{Parameters for interpolation (see paleodata_interpolation)}

\item{xout}{Parameters for interpolation (see paleodata_interpolation)}

\item{windowing}{Logical: should restriction to time window be applied?}

\item{start_date}{Parameters for windowing (see paleodata_windowing)}

\item{end_date}{Parameters for windowing (see paleodata_windowing)}

\item{transformation}{Logical: should transformation be applied?}

\item{transformation_type}{Parameters for transformation (see paleodata_transformation)}

\item{signal_extraction}{Logical: should signal extraction be applied?}

\item{signal_type}{Parameters for signal extraction (see paleodata_signal_extraction)}

\item{signal_components}{Parameters for signal extraction (see paleodata_signal_extraction)}
}
\value{
Proxytibble with proxy data in `zoo::zoo` format or irregular time series object (`zoo::zoo`) containing the processed signals
}
\description{
Input data --> filtering --> interpolation --> time restriction (windowing) --> transformation --> signal extraction --> output data
}
\examples{
#' # Load ice core example data
library(PTBoxProxydata)
mng <- ProxyDataManager()
icecoredata <- load_set(mng,'icecore_testset',zoo_format = 'zoo')
# Step-by-step processing of ice core data: 1) Bandpass filter, 2) Interpolate to common time axis, 3) Restrict to 30-60ka BP, 4) Normalize, 5) Compute 1. PC
icecoredata_processed <- paleodata_processing(icecoredata, filtering = TRUE, filter_type = "bandpass", filter_scales = data.frame(lower=1000, upper=10000),
                                                           interpolation = TRUE, method = "lh14", xout = seq(20000,70000,by=100),
                                                           windowing = TRUE, start_date = 30000, end_date = 60000,
                                                           transformation = TRUE, transformation_type = "normalize",
                                                           signal_extraction = TRUE, signal_type = "pca", signal_components = 1)
# Plotting
plot(icecoredata_processed[[1]]$proxy_data[[1]])
plot(icecoredata_processed[[2]]$proxy_data[[1]])
plot(icecoredata_processed[[3]]$proxy_data[[1]])

}
\seealso{
\link{paleodata_filtering} (from `PTBoxProxytools`) for filtering

\link{paleodata_interpolation} (from `PTBoxProxytools`) for interpolation

\link{paleodata_windowing} (from `PTBoxProxytools`) for time period restriction

\link{paleodata_transformation} (from `PTBoxProxytools`) for transformation

\link{paleodata_signal_extraction} (from `PTBoxProxytools`) for signal extraction
}
